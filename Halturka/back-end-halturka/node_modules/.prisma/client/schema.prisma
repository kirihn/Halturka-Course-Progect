// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}



model User {
  Id Int @id @default(autoincrement()) // Prim

  Password String
  Email String @unique
  Role Int

  CreatedAt DateTime @default(now()) @map("Created_At")

  //

  customer Customer?
  handyMan HandyMan?
  feedbacks Feedback[]
}



model Customer {
  CustomerId Int @id @default(autoincrement()) @map("Customer_Id") // Prim

  user User @relation(fields: [UserId], references: [Id])
  UserId Int @unique @map("User_Id")// Forink

  // ===================
  Name String 
  PhoneNumber String @map("Phone_Number") 
  AvatarPath String @default("/uploads/default-avatar.png") @map("Avatar_Path")

  //

  orders Order[]
}



model HandyMan{
  HandyManId Int @id @default(autoincrement()) @map("Handy_Man_Id") // Prim

  user User @relation(fields: [UserId], references: [Id])
  UserId Int @unique @map("User_Id")// Forink

  // ===================
  Name String 
  PhoneNumber String @map("Phone_Number")
  AvatarPath String @default("/uploads/default-avatar.png") @map("Avatar_Path")

  //

  serviceHandyMans ServiceHandyMan[]
  orders Order[]
}



model Service{
  ServiceId Int @id @default(autoincrement()) @map("Service_Id") // Prim

  ServiceType String @map("Service_Type")
  ServiceName String @map("Service_Name") @unique

  //

  serviceHandyMans ServiceHandyMan[]
  orders Order[]
}



model ServiceHandyMan{
  ServiceHandyManId Int @id @default(autoincrement()) @map("Service_Handy_Man_Id") // Prim

  handyMan HandyMan @relation(fields: [HandyManId], references: [HandyManId])
  HandyManId Int @map("Handy_Man_Id") //forink

  service Service @relation(fields: [ServiceId], references: [ServiceId])
  ServiceId Int @map("Service_Id") //forink


  // ===================
  Message String
  Price Decimal
  TypePrice String @map("type_Price")
  Images String[]
}



model Order {
  OrderId Int @id @default(autoincrement()) @map("Order_Id") // Prim
  
  customer Customer @relation(fields: [CustomerId], references: [CustomerId])
  CustomerId Int @map("Customer_Id") // Forink
  
  handyMan HandyMan @relation(fields: [HandyManId], references: [HandyManId])
  HandyManId Int @map("Handy_Man_Id") // Forink
  
  service Service @relation(fields: [ServiceId], references: [ServiceId])
  ServiceId Int @map("Service_Id") // Forink

  Images String[]
  Address String
  Message String
  Status EnumOrderStatus @default(PENDING)

  Created_At DateTime @default(now()) @map("Created_At")
  UpdatedAt DateTime @updatedAt @map("Updated_At")

  //

  feedbacks Feedback[]
}



model Feedback{
  FeedbackId Int @id @default(autoincrement()) @map("Feedback_Id") // Prim

  UserIdFrom Int @map("User_Id_From")
  
  user User @relation(fields: [UserIdTo], references: [Id])
  UserIdTo Int @map("User_Id_To") // Forink
  
  order Order @relation(fields: [OrderId], references: [OrderId])
  OrderId Int @map("Order_Id") // Forink

  Message String
  Rating Int
}




enum EnumOrderStatus{
    PENDING
    ACCEPTED
    INPROCESS
    COMPLITED
    REJECTED
}


